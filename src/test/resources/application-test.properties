# ===================================================================
# Settings for TEST environment
# ===================================================================


# ===================================================================
# Database settings
# ===================================================================

# At first run you need to re-create test data from scratch:
#spring.jpa.properties.javax.persistence.schema-generation.database.action=create
#loadTestData=false

# In the next runs, you can quickly load the DB schemea and the created testData via a DB script
spring.jpa.properties.javax.persistence.schema-generation.database.action=none
loadTestData=true

# ===================================================================
# Liquido specific configuration parameters
# ===================================================================

# In DEV and TEST environment this SMS login code is valid for any user.  SET THIS TO EMPTY IN PROD!
liquido.devLoginSmsToken=998877

# SECURITY: Salt for creating checksums of voterTokens.
# You must use the same salt for re-generating tokens and checksums after an application restart!
# This must be a valid BCrypt salt ie. begin with $2a$10$  !
liquido.bcrypt.salt=$2a$10$1IdrGrRAN2Wp3U7QI.JIzu

# A secret only known to the server. This ensures that only this server is able to create valid voterTokens and checksums
liquido.bcrypt.secret=liquidoServerSecret%324234!F

# URL of web frontend / client Vue App. This is used when requesting a login token via E-Mail in UserRestController.java
liquido.frontendUrl=http://localhost:3001

liquido.smtp.host=smtp.ionos.de
liquido.smtp.port=587
liquido.smtp.from=liquido@doogie.de
liquido.smtp.fromname=LIQUIDO
liquido.smtp.username=robert@doogie.de
liquido.smtp.pass=XXXXXXX

# The user with this e-mail and name automatically becomes the admin user. An admin can delete polls and proposals!
liquido.admin.email=admin@liquido.de
liquido.admin.name=Admin Name
liquido.admin.mobilephone=+491234567890