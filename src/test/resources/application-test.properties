# ===================================================================
# Spring Boot Application Properties
# for TEST environment.   These settings overwrite and extend the settings from application.properties
# ===================================================================

# ===================================================================
# DATABASE SETTINGS for TEST
# https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#howto-database-initialization
# ===================================================================

# In TEST database schema and test data is quickly injected from sampleDB-H2.sql with TestDataCreate.java. This test data must have been created before!
loadTestData=true

# In TEST dpring-data-jpa should not generate a schema  [true|false]
spring.jpa.generate-ddl=false

# In TEST we want to  validate the schema that is loaded from sampleDB-H2.sql  [none, validate, update, create, create-drop]
spring.jpa.hibernate.ddl-auto=none



# ===================================================================
# Logging
# Since 10 years and three logging frameworks I am always re-learning, how to configure this simple logging format. It gives you clickable links in your IDE *G*
# ===================================================================
spring.output.ansi.enabled=ALWAYS
logging.pattern.console=%highlight(%-5level) %cyan(%-70.70(.\\(%file:%line\\).%method\\(\\))) | %message%n

logging.level.org.doogie.liquido=DEBUG
logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=DEBUG

# Enable this for a lot of fancy and helpful debug messages
debug=true
#logging.level.web=TRACE
#logging.level.org.springframework=TRACE
#logging.level.org.springframework.web=TRACE

# Show Hibernate Schema creation https://docs.spring.io/spring-boot/docs/current/reference/html/howto-database-initialization.html#howto-initialize-a-database-using-hibernate
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.type=TRACE

# Show all Hibernate JPA SQL commands during runtime including binding of sql query parameters to values. (needs debug=true)
# This significantly slows down the app and creates A LOT of debugging output. Watch your disk space!

#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# log HTTP response body with DoogiesRequestLogger.java
liquido.debug.log.includeResponsePayload=true

# ===================================================================
# All secret properties must be set via a local application-test.yml  file!
