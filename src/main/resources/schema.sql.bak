##############################################################################
# Tables for Spring Data JPA Entities
# (set spring.jpa.show-sql=true  in application.properties to get these)
##############################################################################

drop table areas if exists
drop table ballot_model if exists
drop table ballot_model_vote_order if exists
drop table checksums if exists
drop table comments if exists
drop table comments_down_voters if exists
drop table comments_up_voters if exists
drop table delegations if exists
drop table key_value if exists
drop table laws if exists
drop table laws_comments if exists
drop table laws_supporters if exists
drop table one_time_token if exists
drop table polls if exists
drop table users if exists
drop sequence if exists hibernate_sequence
create sequence hibernate_sequence start with 1 increment by 1
create table areas (id bigint not null, created_at timestamp not null, updated_at timestamp not null, description varchar(255) not null, title varchar(255) not null, created_by_id bigint not null, primary key (id))
create table ballot_model (id bigint not null, level integer not null, vote_count integer not null, checksum_checksum varchar(255) not null, poll_id bigint not null, primary key (id))
create table ballot_model_vote_order (ballot_model_id bigint not null, vote_order_id bigint not null, vote_order_order integer not null, primary key (ballot_model_id, vote_order_order))
create table checksums (checksum varchar(255) not null, expires_at timestamp, requested_delegation_at timestamp, transitive boolean not null, area_id bigint, delegated_to_checksum varchar(255), public_proxy_id bigint, requested_delegation_to_id bigint, primary key (checksum))
create table comments (id bigint not null, created_at timestamp not null, updated_at timestamp not null, comment varchar(255) not null, created_by_id bigint not null, parent_id bigint, primary key (id))
create table comments_down_voters (comment_model_id bigint not null, down_voters_id bigint not null, primary key (comment_model_id, down_voters_id))
create table comments_up_voters (comment_model_id bigint not null, up_voters_id bigint not null, primary key (comment_model_id, up_voters_id))
create table delegations (id bigint not null, created_at timestamp not null, updated_at timestamp not null, area_id bigint not null, from_user_id bigint not null, to_proxy_id bigint not null, primary key (id))
create table key_value (id bigint not null, key varchar(255) not null, value varchar(255), primary key (id))
create table laws (id bigint not null, created_at timestamp not null, updated_at timestamp not null, description varchar(1000) not null, reached_quorum_at timestamp, status integer not null, title varchar(255) not null, area_id bigint not null, created_by_id bigint not null, poll_id bigint, primary key (id))
create table laws_comments (law_model_id bigint not null, comments_id bigint not null, primary key (law_model_id, comments_id))
create table laws_supporters (law_model_id bigint not null, supporters_id bigint not null, primary key (law_model_id, supporters_id))
create table one_time_token (id bigint not null, created_at timestamp not null, updated_at timestamp not null, token varchar(255) not null, token_type integer not null, valid_until timestamp not null, user_id bigint not null, primary key (id))
create table polls (id bigint not null, created_at timestamp not null, updated_at timestamp not null, status integer, voting_end_at timestamp, voting_start_at timestamp, winner_id bigint, primary key (id))
create table users (id bigint not null, created_at timestamp not null, updated_at timestamp not null, email varchar(255) not null, password_hash varchar(255) not null, mobile_phone varchar(255), name varchar(255), picture varchar(255), website varchar(255), primary key (id))
alter table areas add constraint UK_p61hnj1m450knduscxoldchfj unique (title)
alter table checksums add constraint UKl0xnklnhlk4ptwsu9b0qxtybn unique (area_id, public_proxy_id)
alter table delegations add constraint UK2wyh7poif8npdwlur8dford0j unique (area_id, from_user_id)
alter table key_value add constraint UK_gvyp924rq0a5y8u3emjs35g2q unique (key)
alter table laws add constraint UK_bs516opv3hontptwvpioos72b unique (title)
alter table laws_comments add constraint UK_of3yv6x3mahjphjbje5xhrxc8 unique (comments_id)
alter table users add constraint UK_6dotkott2kjsp8vw4d0m25fb7 unique (email)
alter table areas add constraint FKp9n0u4hm2q1o7v0068c8gd4el foreign key (created_by_id) references users
alter table ballot_model add constraint FKp19oj9h53my80xir4twvue13b foreign key (checksum_checksum) references checksums
alter table ballot_model add constraint FK80aa8gky9nqs7cs136w9jblj6 foreign key (poll_id) references polls
alter table ballot_model_vote_order add constraint FKk6iwsnafaeqq59n0fnwn5k6di foreign key (vote_order_id) references laws
alter table ballot_model_vote_order add constraint FKg4wvljwgwecjjbw58fvl0ad5x foreign key (ballot_model_id) references ballot_model
alter table checksums add constraint FKllw57xbw0d67optmwfmu3p2pc foreign key (area_id) references areas
alter table checksums add constraint FKdflpse9fsogy1fmfdy2w79rg foreign key (delegated_to_checksum) references checksums
alter table checksums add constraint FK68ftlvl0mwtvoqd3bfupp0xrg foreign key (public_proxy_id) references users
alter table checksums add constraint FKmkxilkggwxgk48mvtp6uaq3np foreign key (requested_delegation_to_id) references users
alter table comments add constraint FKakkm6qfydu7vgnfne1yo0xmed foreign key (created_by_id) references users
alter table comments add constraint FKlri30okf66phtcgbe5pok7cc0 foreign key (parent_id) references comments
alter table comments_down_voters add constraint FK62ilac17tg4cpkrheonud72hv foreign key (down_voters_id) references users
alter table comments_down_voters add constraint FKjymyj54lenhs4ke6myqhly72 foreign key (comment_model_id) references comments
alter table comments_up_voters add constraint FKeuurm027pdc4l5a9g9o2l0uyd foreign key (up_voters_id) references users
alter table comments_up_voters add constraint FK8ls8t571y99vttw1mdkebxagp foreign key (comment_model_id) references comments
alter table delegations add constraint FKswbdeovc7hsq5ex30pbmdu9d4 foreign key (area_id) references areas
alter table delegations add constraint FK9koya2mi6t18vf7u1frobkniq foreign key (from_user_id) references users
alter table delegations add constraint FK21a6lg8fu2js6e0ju41wj2gqp foreign key (to_proxy_id) references users
alter table laws add constraint FK9viqdj5ldun0ahwqdff1wuy39 foreign key (area_id) references areas
alter table laws add constraint FKtr1pll46q50shwbffyiyuavgn foreign key (created_by_id) references users
alter table laws add constraint FK4quhd81mm84x6rq0ccbxseyxx foreign key (poll_id) references polls
alter table laws_comments add constraint FKfl0y4qfvfpf9ynmmfj0jevxff foreign key (comments_id) references comments
alter table laws_comments add constraint FK36fbkiuitrv0yrvy8s0ig46ix foreign key (law_model_id) references laws
alter table laws_supporters add constraint FKk8mvjc4rq970ojavyfia9bqve foreign key (supporters_id) references users
alter table laws_supporters add constraint FK9b4i87yikuchrirfjaymgohe3 foreign key (law_model_id) references laws
alter table one_time_token add constraint FK4o21xt1rmricb3ea4to5nkr8d foreign key (user_id) references users
alter table polls add constraint FKqadovsmq4uok58sp9hkhwjqis foreign key (winner_id) references laws










##############################################################################
# Tables for QUARTZ scheduler
# from org/quartz/impl/jdbcjobstore/tables_h2.sql
##############################################################################

-- Thanks to Amir Kibbar and Peter Rietzler for contributing the schema for H2 database,
-- and verifying that it works with Quartz's StdJDBCDelegate
--
-- Note, Quartz depends on row-level locking which means you must use the MVCC=TRUE
-- setting on your H2 database, or you will experience dead-locks
--
--
-- In your Quartz properties file, you'll need to set
-- org.quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.StdJDBCDelegate

CREATE TABLE QRTZ_CALENDARS (
  SCHED_NAME VARCHAR(120) NOT NULL,
  CALENDAR_NAME VARCHAR (200)  NOT NULL ,
  CALENDAR IMAGE NOT NULL
);

CREATE TABLE QRTZ_CRON_TRIGGERS (
  SCHED_NAME VARCHAR(120) NOT NULL,
  TRIGGER_NAME VARCHAR (200)  NOT NULL ,
  TRIGGER_GROUP VARCHAR (200)  NOT NULL ,
  CRON_EXPRESSION VARCHAR (120)  NOT NULL ,
  TIME_ZONE_ID VARCHAR (80)
);

CREATE TABLE QRTZ_FIRED_TRIGGERS (
  SCHED_NAME VARCHAR(120) NOT NULL,
  ENTRY_ID VARCHAR (95)  NOT NULL ,
  TRIGGER_NAME VARCHAR (200)  NOT NULL ,
  TRIGGER_GROUP VARCHAR (200)  NOT NULL ,
  INSTANCE_NAME VARCHAR (200)  NOT NULL ,
  FIRED_TIME BIGINT NOT NULL ,
  SCHED_TIME BIGINT NOT NULL ,
  PRIORITY INTEGER NOT NULL ,
  STATE VARCHAR (16)  NOT NULL,
  JOB_NAME VARCHAR (200)  NULL ,
  JOB_GROUP VARCHAR (200)  NULL ,
  IS_NONCONCURRENT BOOLEAN  NULL ,
  REQUESTS_RECOVERY BOOLEAN  NULL
);

CREATE TABLE QRTZ_PAUSED_TRIGGER_GRPS (
  SCHED_NAME VARCHAR(120) NOT NULL,
  TRIGGER_GROUP VARCHAR (200)  NOT NULL
);

CREATE TABLE QRTZ_SCHEDULER_STATE (
  SCHED_NAME VARCHAR(120) NOT NULL,
  INSTANCE_NAME VARCHAR (200)  NOT NULL ,
  LAST_CHECKIN_TIME BIGINT NOT NULL ,
  CHECKIN_INTERVAL BIGINT NOT NULL
);

CREATE TABLE QRTZ_LOCKS (
  SCHED_NAME VARCHAR(120) NOT NULL,
  LOCK_NAME VARCHAR (40)  NOT NULL
);

CREATE TABLE QRTZ_JOB_DETAILS (
  SCHED_NAME VARCHAR(120) NOT NULL,
  JOB_NAME VARCHAR (200)  NOT NULL ,
  JOB_GROUP VARCHAR (200)  NOT NULL ,
  DESCRIPTION VARCHAR (250) NULL ,
  JOB_CLASS_NAME VARCHAR (250)  NOT NULL ,
  IS_DURABLE BOOLEAN  NOT NULL ,
  IS_NONCONCURRENT BOOLEAN  NOT NULL ,
  IS_UPDATE_DATA BOOLEAN  NOT NULL ,
  REQUESTS_RECOVERY BOOLEAN  NOT NULL ,
  JOB_DATA IMAGE NULL
);

CREATE TABLE QRTZ_SIMPLE_TRIGGERS (
  SCHED_NAME VARCHAR(120) NOT NULL,
  TRIGGER_NAME VARCHAR (200)  NOT NULL ,
  TRIGGER_GROUP VARCHAR (200)  NOT NULL ,
  REPEAT_COUNT BIGINT NOT NULL ,
  REPEAT_INTERVAL BIGINT NOT NULL ,
  TIMES_TRIGGERED BIGINT NOT NULL
);

CREATE TABLE qrtz_simprop_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    STR_PROP_1 VARCHAR(512) NULL,
    STR_PROP_2 VARCHAR(512) NULL,
    STR_PROP_3 VARCHAR(512) NULL,
    INT_PROP_1 INTEGER NULL,
    INT_PROP_2 INTEGER NULL,
    LONG_PROP_1 BIGINT NULL,
    LONG_PROP_2 BIGINT NULL,
    DEC_PROP_1 NUMERIC(13,4) NULL,
    DEC_PROP_2 NUMERIC(13,4) NULL,
    BOOL_PROP_1 BOOLEAN NULL,
    BOOL_PROP_2 BOOLEAN NULL,
);

CREATE TABLE QRTZ_BLOB_TRIGGERS (
  SCHED_NAME VARCHAR(120) NOT NULL,
  TRIGGER_NAME VARCHAR (200)  NOT NULL ,
  TRIGGER_GROUP VARCHAR (200)  NOT NULL ,
  BLOB_DATA IMAGE NULL
);

CREATE TABLE QRTZ_TRIGGERS (
  SCHED_NAME VARCHAR(120) NOT NULL,
  TRIGGER_NAME VARCHAR (200)  NOT NULL ,
  TRIGGER_GROUP VARCHAR (200)  NOT NULL ,
  JOB_NAME VARCHAR (200)  NOT NULL ,
  JOB_GROUP VARCHAR (200)  NOT NULL ,
  DESCRIPTION VARCHAR (250) NULL ,
  NEXT_FIRE_TIME BIGINT NULL ,
  PREV_FIRE_TIME BIGINT NULL ,
  PRIORITY INTEGER NULL ,
  TRIGGER_STATE VARCHAR (16)  NOT NULL ,
  TRIGGER_TYPE VARCHAR (8)  NOT NULL ,
  START_TIME BIGINT NOT NULL ,
  END_TIME BIGINT NULL ,
  CALENDAR_NAME VARCHAR (200)  NULL ,
  MISFIRE_INSTR SMALLINT NULL ,
  JOB_DATA IMAGE NULL
);

ALTER TABLE QRTZ_CALENDARS  ADD
  CONSTRAINT PK_QRTZ_CALENDARS PRIMARY KEY
  (
    SCHED_NAME,
    CALENDAR_NAME
  );

ALTER TABLE QRTZ_CRON_TRIGGERS  ADD
  CONSTRAINT PK_QRTZ_CRON_TRIGGERS PRIMARY KEY
  (
    SCHED_NAME,
    TRIGGER_NAME,
    TRIGGER_GROUP
  );

ALTER TABLE QRTZ_FIRED_TRIGGERS  ADD
  CONSTRAINT PK_QRTZ_FIRED_TRIGGERS PRIMARY KEY
  (
    SCHED_NAME,
    ENTRY_ID
  );

ALTER TABLE QRTZ_PAUSED_TRIGGER_GRPS  ADD
  CONSTRAINT PK_QRTZ_PAUSED_TRIGGER_GRPS PRIMARY KEY
  (
    SCHED_NAME,
    TRIGGER_GROUP
  );

ALTER TABLE QRTZ_SCHEDULER_STATE  ADD
  CONSTRAINT PK_QRTZ_SCHEDULER_STATE PRIMARY KEY
  (
    SCHED_NAME,
    INSTANCE_NAME
  );

ALTER TABLE QRTZ_LOCKS  ADD
  CONSTRAINT PK_QRTZ_LOCKS PRIMARY KEY
  (
    SCHED_NAME,
    LOCK_NAME
  );

ALTER TABLE QRTZ_JOB_DETAILS  ADD
  CONSTRAINT PK_QRTZ_JOB_DETAILS PRIMARY KEY
  (
    SCHED_NAME,
    JOB_NAME,
    JOB_GROUP
  );

ALTER TABLE QRTZ_SIMPLE_TRIGGERS  ADD
  CONSTRAINT PK_QRTZ_SIMPLE_TRIGGERS PRIMARY KEY
  (
    SCHED_NAME,
    TRIGGER_NAME,
    TRIGGER_GROUP
  );

ALTER TABLE QRTZ_SIMPROP_TRIGGERS  ADD
  CONSTRAINT PK_QRTZ_SIMPROP_TRIGGERS PRIMARY KEY
  (
    SCHED_NAME,
    TRIGGER_NAME,
    TRIGGER_GROUP
  );

ALTER TABLE QRTZ_TRIGGERS  ADD
  CONSTRAINT PK_QRTZ_TRIGGERS PRIMARY KEY
  (
    SCHED_NAME,
    TRIGGER_NAME,
    TRIGGER_GROUP
  );

ALTER TABLE QRTZ_CRON_TRIGGERS ADD
  CONSTRAINT FK_QRTZ_CRON_TRIGGERS_QRTZ_TRIGGERS FOREIGN KEY
  (
    SCHED_NAME,
    TRIGGER_NAME,
    TRIGGER_GROUP
  ) REFERENCES QRTZ_TRIGGERS (
    SCHED_NAME,
    TRIGGER_NAME,
    TRIGGER_GROUP
  ) ON DELETE CASCADE;


ALTER TABLE QRTZ_SIMPLE_TRIGGERS ADD
  CONSTRAINT FK_QRTZ_SIMPLE_TRIGGERS_QRTZ_TRIGGERS FOREIGN KEY
  (
    SCHED_NAME,
    TRIGGER_NAME,
    TRIGGER_GROUP
  ) REFERENCES QRTZ_TRIGGERS (
    SCHED_NAME,
    TRIGGER_NAME,
    TRIGGER_GROUP
  ) ON DELETE CASCADE;

ALTER TABLE QRTZ_SIMPROP_TRIGGERS ADD
  CONSTRAINT FK_QRTZ_SIMPROP_TRIGGERS_QRTZ_TRIGGERS FOREIGN KEY
  (
    SCHED_NAME,
    TRIGGER_NAME,
    TRIGGER_GROUP
  ) REFERENCES QRTZ_TRIGGERS (
    SCHED_NAME,
    TRIGGER_NAME,
    TRIGGER_GROUP
  ) ON DELETE CASCADE;


ALTER TABLE QRTZ_TRIGGERS ADD
  CONSTRAINT FK_QRTZ_TRIGGERS_QRTZ_JOB_DETAILS FOREIGN KEY
  (
    SCHED_NAME,
    JOB_NAME,
    JOB_GROUP
  ) REFERENCES QRTZ_JOB_DETAILS (
    SCHED_NAME,
    JOB_NAME,
    JOB_GROUP
  );

COMMIT;
