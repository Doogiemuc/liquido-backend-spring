# ===================================================================
# Settings for development environment
# ===================================================================

# Create schema.sql script for initializing a database later in other environments
# https://stackoverflow.com/questions/37648395/how-to-see-the-schema-sql-ddl-in-spring-boot
# https://thoughts-on-java.org/standardized-schema-generation-data-loading-jpa-2-1/
spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=build/schema.sql

# The DB schema can be created by spring JPA. Or you can use the build/schema.sql script which is written on first start of Liquido.
# (none, create, drop-and-create or drop)
spring.jpa.properties.javax.persistence.schema-generation.database.action=create

# In DEV spring-boot automatically starts an embedded in memory DB (H2-DB)
# Enable the H2 Web console for the embedded H2 DB. JDBC URL is   jdbc:h2:mem:testdb    username: sa   no password
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
#spring.datasource.username=sa
#spring.datasource.password=DefaultPwdIsEmpty

####################################
# Debugging logs
####################################

# Enable for a lot of fancy and helpful debug messages
#debug=true
#logging.level.web=TRACE
#logging.level.org.springframework=TRACE
#logging.level.org.springframework.web=TRACE

logging.level.org.doogie.liquido=DEBUG
logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=DEBUG

# Show Hibernate Schema creation   https://docs.spring.io/spring-boot/docs/current/reference/html/howto-database-initialization.html#howto-initialize-a-database-using-hibernate
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.type=TRACE

# Show all Hibernate JPA SQL commands during runtime including binding of sql query parameters to values. (needs debug=true)
# This significantly slows down the app and creates A LOT of debugging output. Watch your disk space!
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# In DEV and TEST environment this SMS login code is valid for any user.  SET THIS TO EMPTY IN PROD!
liquido.devLoginSmsToken=998877

liquido.smtp.host=smtp.ionos.de
liquido.smtp.port=587
liquido.smtp.from=liquido@doogie.de
liquido.smtp.fromname=LIQUIDO
liquido.smtp.username=robert@doogie.de
liquido.smtp.pass=XXXXXXX

# The user with this e-mail and name automatically becomes the admin user. An admin can delete polls and proposals!
liquido.admin.email=admin@liquido.de
liquido.admin.name=Admin Name
liquido.admin.mobilephone=+491234567890